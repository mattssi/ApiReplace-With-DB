@model IEnumerable<ChistesAPI_DB.Models.Chiste>

@{
    ViewData["Title"] = "Index";
    var pageSize = 5;
    var currentPage = ViewContext.HttpContext.Request.Query["page"].FirstOrDefault();
    var currentPageNumber = !string.IsNullOrEmpty(currentPage) ? Convert.ToInt32(currentPage) : 1;
    var pageCount = (int)Math.Ceiling(Model.Count() / (double)pageSize);
}

<h1>Chistes</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Contenido)
            </th>
                </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Skip((currentPageNumber - 1) * pageSize).Take(pageSize))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Contenido)
                </td>
                <td>
                    <a asp-action="Edit" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" class="btn btn-primary" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for (var i = 1; i <= pageCount; i++)
            {
                <li class="page-item @(i == currentPageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>
